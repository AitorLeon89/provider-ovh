//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespace) DeepCopyInto(out *ProjectDatabaseM3DbNamespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespace.
func (in *ProjectDatabaseM3DbNamespace) DeepCopy() *ProjectDatabaseM3DbNamespace {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseM3DbNamespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceInitParameters) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockDataExpirationDuration != nil {
		in, out := &in.RetentionBlockDataExpirationDuration, &out.RetentionBlockDataExpirationDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockSizeDuration != nil {
		in, out := &in.RetentionBlockSizeDuration, &out.RetentionBlockSizeDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferFutureDuration != nil {
		in, out := &in.RetentionBufferFutureDuration, &out.RetentionBufferFutureDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferPastDuration != nil {
		in, out := &in.RetentionBufferPastDuration, &out.RetentionBufferPastDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDuration != nil {
		in, out := &in.RetentionPeriodDuration, &out.RetentionPeriodDuration
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEnabled != nil {
		in, out := &in.SnapshotEnabled, &out.SnapshotEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WritesToCommitLogEnabled != nil {
		in, out := &in.WritesToCommitLogEnabled, &out.WritesToCommitLogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceInitParameters.
func (in *ProjectDatabaseM3DbNamespaceInitParameters) DeepCopy() *ProjectDatabaseM3DbNamespaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceList) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseM3DbNamespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceList.
func (in *ProjectDatabaseM3DbNamespaceList) DeepCopy() *ProjectDatabaseM3DbNamespaceList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseM3DbNamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceObservation) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockDataExpirationDuration != nil {
		in, out := &in.RetentionBlockDataExpirationDuration, &out.RetentionBlockDataExpirationDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockSizeDuration != nil {
		in, out := &in.RetentionBlockSizeDuration, &out.RetentionBlockSizeDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferFutureDuration != nil {
		in, out := &in.RetentionBufferFutureDuration, &out.RetentionBufferFutureDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferPastDuration != nil {
		in, out := &in.RetentionBufferPastDuration, &out.RetentionBufferPastDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDuration != nil {
		in, out := &in.RetentionPeriodDuration, &out.RetentionPeriodDuration
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEnabled != nil {
		in, out := &in.SnapshotEnabled, &out.SnapshotEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WritesToCommitLogEnabled != nil {
		in, out := &in.WritesToCommitLogEnabled, &out.WritesToCommitLogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceObservation.
func (in *ProjectDatabaseM3DbNamespaceObservation) DeepCopy() *ProjectDatabaseM3DbNamespaceObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceParameters) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Resolution != nil {
		in, out := &in.Resolution, &out.Resolution
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockDataExpirationDuration != nil {
		in, out := &in.RetentionBlockDataExpirationDuration, &out.RetentionBlockDataExpirationDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBlockSizeDuration != nil {
		in, out := &in.RetentionBlockSizeDuration, &out.RetentionBlockSizeDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferFutureDuration != nil {
		in, out := &in.RetentionBufferFutureDuration, &out.RetentionBufferFutureDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionBufferPastDuration != nil {
		in, out := &in.RetentionBufferPastDuration, &out.RetentionBufferPastDuration
		*out = new(string)
		**out = **in
	}
	if in.RetentionPeriodDuration != nil {
		in, out := &in.RetentionPeriodDuration, &out.RetentionPeriodDuration
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SnapshotEnabled != nil {
		in, out := &in.SnapshotEnabled, &out.SnapshotEnabled
		*out = new(bool)
		**out = **in
	}
	if in.WritesToCommitLogEnabled != nil {
		in, out := &in.WritesToCommitLogEnabled, &out.WritesToCommitLogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceParameters.
func (in *ProjectDatabaseM3DbNamespaceParameters) DeepCopy() *ProjectDatabaseM3DbNamespaceParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceSpec) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceSpec.
func (in *ProjectDatabaseM3DbNamespaceSpec) DeepCopy() *ProjectDatabaseM3DbNamespaceSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseM3DbNamespaceStatus) DeepCopyInto(out *ProjectDatabaseM3DbNamespaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseM3DbNamespaceStatus.
func (in *ProjectDatabaseM3DbNamespaceStatus) DeepCopy() *ProjectDatabaseM3DbNamespaceStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseM3DbNamespaceStatus)
	in.DeepCopyInto(out)
	return out
}
