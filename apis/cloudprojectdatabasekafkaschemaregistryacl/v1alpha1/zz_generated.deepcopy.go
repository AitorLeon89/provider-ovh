//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryacl) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryacl) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryacl.
func (in *ProjectDatabaseKafkaSchemaregistryacl) DeepCopy() *ProjectDatabaseKafkaSchemaregistryacl {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryacl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseKafkaSchemaregistryacl) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclInitParameters) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclInitParameters.
func (in *ProjectDatabaseKafkaSchemaregistryaclInitParameters) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclList) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectDatabaseKafkaSchemaregistryacl, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclList.
func (in *ProjectDatabaseKafkaSchemaregistryaclList) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclList {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectDatabaseKafkaSchemaregistryaclList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclObservation) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclObservation.
func (in *ProjectDatabaseKafkaSchemaregistryaclObservation) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclParameters) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclParameters.
func (in *ProjectDatabaseKafkaSchemaregistryaclParameters) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclSpec) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclSpec.
func (in *ProjectDatabaseKafkaSchemaregistryaclSpec) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectDatabaseKafkaSchemaregistryaclStatus) DeepCopyInto(out *ProjectDatabaseKafkaSchemaregistryaclStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectDatabaseKafkaSchemaregistryaclStatus.
func (in *ProjectDatabaseKafkaSchemaregistryaclStatus) DeepCopy() *ProjectDatabaseKafkaSchemaregistryaclStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectDatabaseKafkaSchemaregistryaclStatus)
	in.DeepCopyInto(out)
	return out
}
